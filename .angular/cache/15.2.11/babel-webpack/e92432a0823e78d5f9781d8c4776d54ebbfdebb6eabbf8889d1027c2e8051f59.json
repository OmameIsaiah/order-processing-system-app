{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { AddProductModalComponent } from '../components/products/add-product-modal/add-product-modal.component';\nimport { EditProductModalComponent } from '../components/products/edit-product-modal/edit-product-modal.component';\nimport { ConfirmDeleteModalComponent } from '../components/products/confirm-delete-modal/confirm-delete-modal.component';\nimport { ViewProductModalComponent } from '../components/products/view-product-modal/view-product-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../services/notification.service\";\nimport * as i3 from \"@angular/material/dialog\";\nexport class ProductsComponent {\n  constructor(http, notificationService, dialog) {\n    this.http = http;\n    this.notificationService = notificationService;\n    this.dialog = dialog;\n    this.products = [];\n    this.isLoading = false;\n  }\n  ngOnInit() {\n    this.loadProducts();\n  }\n  loadProducts() {\n    this.isLoading = true;\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    this.http.get('http://localhost:2003/order-service/api/v1/products?page=0&size=50', {\n      headers\n    }).subscribe(response => {\n      this.products = response.data;\n      this.isLoading = false;\n    }, error => {\n      this.isLoading = false;\n      this.notificationService.showNotification(error.error.message || 'Failed to load products', 'error');\n    });\n  }\n  openAddProductModal() {\n    const dialogRef = this.dialog.open(AddProductModalComponent, {\n      width: '400px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.loadProducts(); // Reload products after adding\n      }\n    });\n  }\n\n  openEditProductModal(product) {\n    const dialogRef = this.dialog.open(EditProductModalComponent, {\n      width: '400px',\n      data: {\n        product\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.loadProducts(); // Reload products after editing\n      }\n    });\n  }\n\n  openDeleteConfirmationModal(productUuid) {\n    const dialogRef = this.dialog.open(ConfirmDeleteModalComponent, {\n      width: '300px',\n      data: {\n        productUuid\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.loadProducts(); // Reload products after deleting\n      }\n    });\n  }\n\n  openViewProductModal(productUuid) {\n    this.dialog.open(ViewProductModalComponent, {\n      width: '400px',\n      data: {\n        productUuid\n      }\n    });\n  }\n  static {\n    this.ɵfac = function ProductsComponent_Factory(t) {\n      return new (t || ProductsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.NotificationService), i0.ɵɵdirectiveInject(i3.MatDialog));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProductsComponent,\n      selectors: [[\"app-products\"]],\n      decls: 2,\n      vars: 0,\n      template: function ProductsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"products works!\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["HttpHeaders","AddProductModalComponent","EditProductModalComponent","ConfirmDeleteModalComponent","ViewProductModalComponent","ProductsComponent","constructor","http","notificationService","dialog","ngOnInit","loadProducts","isLoading","token","localStorage","getItem","headers","set","get","subscribe","response","products","data","error","showNotification","message","openAddProductModal","dialogRef","open","width","afterClosed","result","openEditProductModal","product","openDeleteConfirmationModal","productUuid","openViewProductModal","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Isaiah\\Business\\Neptune-Microfinance-Bank\\order-processing-system-app\\src\\app\\products\\products.component.ts","C:\\Isaiah\\Business\\Neptune-Microfinance-Bank\\order-processing-system-app\\src\\app\\products\\products.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { NotificationService } from '../services/notification.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddProductModalComponent } from '../components/products/add-product-modal/add-product-modal.component';\nimport { EditProductModalComponent } from '../components/products/edit-product-modal/edit-product-modal.component';\nimport { ConfirmDeleteModalComponent } from '../components/products/confirm-delete-modal/confirm-delete-modal.component';\nimport { ViewProductModalComponent } from '../components/products/view-product-modal/view-product-modal.component';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css'],\n})\nexport class ProductsComponent implements OnInit {\n  products: any[] = [];\n  isLoading = false;\n\n  constructor(\n    private http: HttpClient,\n    private notificationService: NotificationService,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.loadProducts();\n  }\n\n  loadProducts(): void {\n    this.isLoading = true;\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n    this.http\n      .get('http://localhost:2003/order-service/api/v1/products?page=0&size=50', { headers })\n      .subscribe(\n        (response: any) => {\n          this.products = response.data;\n          this.isLoading = false;\n        },\n        (error) => {\n          this.isLoading = false;\n          this.notificationService.showNotification(\n            error.error.message || 'Failed to load products',\n            'error'\n          );\n        }\n      );\n  }\n\n  openAddProductModal(): void {\n    const dialogRef = this.dialog.open(AddProductModalComponent, {\n      width: '400px',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.loadProducts(); // Reload products after adding\n      }\n    });\n  }\n\n  openEditProductModal(product: any): void {\n    const dialogRef = this.dialog.open(EditProductModalComponent, {\n      width: '400px',\n      data: { product },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.loadProducts(); // Reload products after editing\n      }\n    });\n  }\n\n  openDeleteConfirmationModal(productUuid: string): void {\n    const dialogRef = this.dialog.open(ConfirmDeleteModalComponent, {\n      width: '300px',\n      data: { productUuid },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.loadProducts(); // Reload products after deleting\n      }\n    });\n  }\n\n  openViewProductModal(productUuid: string): void {\n    this.dialog.open(ViewProductModalComponent, {\n      width: '400px',\n      data: { productUuid },\n    });\n  }\n}","<p>products works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}