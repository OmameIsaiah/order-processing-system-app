{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { ConfirmDeleteOrderModalComponent } from './confirm-delete-order-modal/confirm-delete-order-modal.component';\nimport { ConfirmCancelOrderModalComponent } from './confirm-cancel-order-modal/confirm-cancel-order-modal.component';\nimport { ViewOrderModalComponent } from './view-order-modal/view-order-modal.component';\nlet OrdersComponent = class OrdersComponent {\n  constructor(http, notificationService, dialog) {\n    this.http = http;\n    this.notificationService = notificationService;\n    this.dialog = dialog;\n    this.orders = [];\n    this.isLoading = false;\n    this.currentPage = 0;\n    this.pageSize = 10;\n    this.totalRecords = 0;\n  }\n  ngOnInit() {\n    this.loadOrders();\n  }\n  loadOrders() {\n    this.isLoading = true;\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    this.http.get(`http://localhost:2003/order-service/api/v1/orders?page=${this.currentPage}&size=${this.pageSize}`, {\n      headers\n    }).subscribe(response => {\n      this.orders = response.data;\n      this.totalRecords = response.meta.totalRecords;\n      this.isLoading = false;\n    }, error => {\n      this.isLoading = false;\n      this.notificationService.showNotification(error.error.message || 'Failed to load orders', 'error');\n    });\n  }\n  onPageChange(event) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.loadOrders();\n  }\n  openDeleteOrderModal(orderUuid) {\n    const dialogRef = this.dialog.open(ConfirmDeleteOrderModalComponent, {\n      width: '300px',\n      data: {\n        orderUuid\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.loadOrders(); // Reload orders after deleting\n      }\n    });\n  }\n\n  openCancelOrderModal(orderUuid) {\n    const dialogRef = this.dialog.open(ConfirmCancelOrderModalComponent, {\n      width: '300px',\n      data: {\n        orderUuid\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.loadOrders(); // Reload orders after canceling\n      }\n    });\n  }\n\n  openViewOrderModal(order) {\n    this.dialog.open(ViewOrderModalComponent, {\n      width: '400px',\n      data: {\n        order\n      }\n    });\n  }\n};\nOrdersComponent = __decorate([Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})], OrdersComponent);\nexport { OrdersComponent };","map":{"version":3,"mappings":"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","names":["Component","HttpHeaders","ConfirmDeleteOrderModalComponent","ConfirmCancelOrderModalComponent","ViewOrderModalComponent","OrdersComponent","constructor","http","notificationService","dialog","ngOnInit","loadOrders","isLoading","token","localStorage","getItem","headers","set","get","currentPage","pageSize","subscribe","response","orders","data","totalRecords","meta","error","showNotification","message","onPageChange","event","pageIndex","openDeleteOrderModal","orderUuid","dialogRef","open","width","afterClosed","result","openCancelOrderModal","openViewOrderModal","order","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Isaiah\\Business\\Neptune-Microfinance-Bank\\order-processing-system-app\\src\\app\\orders\\orders.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { NotificationService } from '../../services/notification.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDeleteOrderModalComponent } from './confirm-delete-order-modal/confirm-delete-order-modal.component';\nimport { ConfirmCancelOrderModalComponent } from './confirm-cancel-order-modal/confirm-cancel-order-modal.component';\nimport { ViewOrderModalComponent } from './view-order-modal/view-order-modal.component';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css'],\n})\nexport class OrdersComponent implements OnInit {\n  orders: any[] = [];\n  isLoading = false;\n  currentPage = 0;\n  pageSize = 10;\n  totalRecords = 0;\n\n  constructor(\n    private http: HttpClient,\n    private notificationService: NotificationService,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.loadOrders();\n  }\n\n  loadOrders(): void {\n    this.isLoading = true;\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n    this.http\n      .get(`http://localhost:2003/order-service/api/v1/orders?page=${this.currentPage}&size=${this.pageSize}`, { headers })\n      .subscribe(\n        (response: any) => {\n          this.orders = response.data;\n          this.totalRecords = response.meta.totalRecords;\n          this.isLoading = false;\n        },\n        (error) => {\n          this.isLoading = false;\n          this.notificationService.showNotification(\n            error.error.message || 'Failed to load orders',\n            'error'\n          );\n        }\n      );\n  }\n\n  onPageChange(event: any): void {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.loadOrders();\n  }\n\n  openDeleteOrderModal(orderUuid: string): void {\n    const dialogRef = this.dialog.open(ConfirmDeleteOrderModalComponent, {\n      width: '300px',\n      data: { orderUuid },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.loadOrders(); // Reload orders after deleting\n      }\n    });\n  }\n\n  openCancelOrderModal(orderUuid: string): void {\n    const dialogRef = this.dialog.open(ConfirmCancelOrderModalComponent, {\n      width: '300px',\n      data: { orderUuid },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.loadOrders(); // Reload orders after canceling\n      }\n    });\n  }\n\n  openViewOrderModal(order: any): void {\n    this.dialog.open(ViewOrderModalComponent, {\n      width: '400px',\n      data: { order },\n    });\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}