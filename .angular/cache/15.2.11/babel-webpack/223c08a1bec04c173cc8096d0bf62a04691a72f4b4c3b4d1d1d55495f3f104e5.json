{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../../services/notification.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nexport class EditProductModalComponent {\n  constructor(http, notificationService, dialogRef, data) {\n    this.http = http;\n    this.notificationService = notificationService;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.product = {\n      ...data.product\n    }; // Copy the product data\n  }\n\n  onUpdateProduct() {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    // Map uuid to productUuid in the payload\n    const payload = {\n      productUuid: this.product.uuid,\n      name: this.product.name,\n      quantity: this.product.quantity,\n      unitPrice: this.product.unitPrice\n    };\n    this.http.put('http://localhost:2003/order-service/api/v1/product', payload, {\n      headers\n    }).subscribe(response => {\n      this.notificationService.showNotification('Product updated successfully', 'success');\n      this.dialogRef.close(true); // Close the modal and return true to indicate success\n    }, error => {\n      this.notificationService.showNotification(error.error.message || 'Failed to update product', 'error');\n    });\n  }\n  onCancel() {\n    this.dialogRef.close(false); // Close the modal without updating\n  }\n\n  static {\n    this.ɵfac = function EditProductModalComponent_Factory(t) {\n      return new (t || EditProductModalComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.NotificationService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditProductModalComponent,\n      selectors: [[\"app-edit-product-modal\"]],\n      decls: 25,\n      vars: 4,\n      consts: [[\"mat-dialog-title\", \"\"], [3, \"ngSubmit\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"name\", \"uuid\", \"readonly\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"quantity\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"unitPrice\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"align\", \"end\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n      template: function EditProductModalComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1, \"Edit Product\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\")(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function EditProductModalComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onUpdateProduct();\n          });\n          i0.ɵɵelementStart(4, \"mat-form-field\", 2)(5, \"mat-label\");\n          i0.ɵɵtext(6, \"UUID\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function EditProductModalComponent_Template_input_ngModelChange_7_listener($event) {\n            return ctx.product.uuid = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"mat-form-field\", 2)(9, \"mat-label\");\n          i0.ɵɵtext(10, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function EditProductModalComponent_Template_input_ngModelChange_11_listener($event) {\n            return ctx.product.name = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"mat-form-field\", 2)(13, \"mat-label\");\n          i0.ɵɵtext(14, \"Quantity\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function EditProductModalComponent_Template_input_ngModelChange_15_listener($event) {\n            return ctx.product.quantity = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"mat-form-field\", 2)(17, \"mat-label\");\n          i0.ɵɵtext(18, \"Unit Price\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"input\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function EditProductModalComponent_Template_input_ngModelChange_19_listener($event) {\n            return ctx.product.unitPrice = $event;\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(20, \"mat-dialog-actions\", 7)(21, \"button\", 8);\n          i0.ɵɵlistener(\"click\", function EditProductModalComponent_Template_button_click_21_listener() {\n            return ctx.onCancel();\n          });\n          i0.ɵɵtext(22, \"Cancel\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function EditProductModalComponent_Template_button_click_23_listener() {\n            return ctx.onUpdateProduct();\n          });\n          i0.ɵɵtext(24, \"Update\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.product.uuid);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.product.name);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.product.quantity);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.product.unitPrice);\n        }\n      },\n      dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i5.MatButton, i3.MatDialogTitle, i3.MatDialogContent, i3.MatDialogActions, i6.MatInput, i7.MatFormField, i7.MatLabel],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAuBA,eAAe,QAAQ,0BAA0B;AACxE,SAAqBC,WAAW,QAAQ,sBAAsB;;;;;;;;;AAQ9D,OAAM,MAAOC,yBAAyB;EAGpCC,YACUC,IAAgB,EAChBC,mBAAwC,EACzCC,SAAkD,EACzBC,IAAS;IAHjC,SAAI,GAAJH,IAAI;IACJ,wBAAmB,GAAnBC,mBAAmB;IACpB,cAAS,GAATC,SAAS;IACgB,SAAI,GAAJC,IAAI;IAEpC,IAAI,CAACC,OAAO,GAAG;MAAE,GAAGD,IAAI,CAACC;IAAO,CAAE,CAAC,CAAC;EACtC;;EAEAC,eAAe;IACb,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,OAAO,GAAG,IAAIZ,WAAW,EAAE,CAACa,GAAG,CAAC,eAAe,EAAE,UAAUJ,KAAK,EAAE,CAAC;IAEzE;IACA,MAAMK,OAAO,GAAG;MACdC,WAAW,EAAE,IAAI,CAACR,OAAO,CAACS,IAAI;MAC9BC,IAAI,EAAE,IAAI,CAACV,OAAO,CAACU,IAAI;MACvBC,QAAQ,EAAE,IAAI,CAACX,OAAO,CAACW,QAAQ;MAC/BC,SAAS,EAAE,IAAI,CAACZ,OAAO,CAACY;KACzB;IAED,IAAI,CAAChB,IAAI,CACNiB,GAAG,CAAC,oDAAoD,EAAEN,OAAO,EAAE;MAAEF;IAAO,CAAE,CAAC,CAC/ES,SAAS,CACPC,QAAa,IAAI;MAChB,IAAI,CAAClB,mBAAmB,CAACmB,gBAAgB,CAAC,8BAA8B,EAAE,SAAS,CAAC;MACpF,IAAI,CAAClB,SAAS,CAACmB,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC,EACAC,KAAK,IAAI;MACR,IAAI,CAACrB,mBAAmB,CAACmB,gBAAgB,CACvCE,KAAK,CAACA,KAAK,CAACC,OAAO,IAAI,0BAA0B,EACjD,OAAO,CACR;IACH,CAAC,CACF;EACL;EAEAC,QAAQ;IACN,IAAI,CAACtB,SAAS,CAACmB,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/B;;;;uBA1CWvB,yBAAyB,iJAO1BF,eAAe;IAAA;EAAA;;;YAPdE,yBAAyB;MAAA2B;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCVtCC,6BAAqB;UAAAA,4BAAY;UAAAA,iBAAK;UACtCA,0CAAoB;UACVA;YAAA,OAAYC,qBAAiB;UAAA,EAAC;UAChCD,yCAAkC;UACnBA,oBAAI;UAAAA,iBAAY;UAC3BA,gCAAkE;UAAlDA;YAAA;UAAA,EAA0B;UAA1CA,iBAAkE;UAGtEA,yCAAkC;UACnBA,qBAAI;UAAAA,iBAAY;UAC3BA,iCAAkE;UAAlDA;YAAA;UAAA,EAA0B;UAA1CA,iBAAkE;UAGtEA,0CAAkC;UACnBA,yBAAQ;UAAAA,iBAAY;UAC/BA,iCAAwF;UAA1DA;YAAA;UAAA,EAA8B;UAA5DA,iBAAwF;UAG5FA,0CAAkC;UACnBA,2BAAU;UAAAA,iBAAY;UACjCA,iCAA0F;UAA5DA;YAAA;UAAA,EAA+B;UAA7DA,iBAA0F;UAItGA,8CAAgC;UACTA;YAAA,OAASC,cAAU;UAAA,EAAC;UAACD,uBAAM;UAAAA,iBAAS;UACvDA,kCAAsE;UAA5BA;YAAA,OAASC,qBAAiB;UAAA,EAAC;UAACD,uBAAM;UAAAA,iBAAS;;;UArB7DA,eAA0B;UAA1BA,0CAA0B;UAK1BA,eAA0B;UAA1BA,0CAA0B;UAKZA,eAA8B;UAA9BA,8CAA8B;UAK9BA,eAA+B;UAA/BA,+CAA+B","names":["MAT_DIALOG_DATA","HttpHeaders","EditProductModalComponent","constructor","http","notificationService","dialogRef","data","product","onUpdateProduct","token","localStorage","getItem","headers","set","payload","productUuid","uuid","name","quantity","unitPrice","put","subscribe","response","showNotification","close","error","message","onCancel","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Isaiah\\Business\\Neptune-Microfinance-Bank\\order-processing-system-app\\src\\app\\components\\products\\edit-product-modal\\edit-product-modal.component.ts","C:\\Isaiah\\Business\\Neptune-Microfinance-Bank\\order-processing-system-app\\src\\app\\components\\products\\edit-product-modal\\edit-product-modal.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { NotificationService } from '../../../services/notification.service';\n\n@Component({\n  selector: 'app-edit-product-modal',\n  templateUrl: './edit-product-modal.component.html',\n  styleUrls: ['./edit-product-modal.component.css'],\n})\nexport class EditProductModalComponent {\n  product: any;\n\n  constructor(\n    private http: HttpClient,\n    private notificationService: NotificationService,\n    public dialogRef: MatDialogRef<EditProductModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.product = { ...data.product }; // Copy the product data\n  }\n\n  onUpdateProduct(): void {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n    // Map uuid to productUuid in the payload\n    const payload = {\n      productUuid: this.product.uuid,\n      name: this.product.name,\n      quantity: this.product.quantity,\n      unitPrice: this.product.unitPrice,\n    };\n\n    this.http\n      .put('http://localhost:2003/order-service/api/v1/product', payload, { headers })\n      .subscribe(\n        (response: any) => {\n          this.notificationService.showNotification('Product updated successfully', 'success');\n          this.dialogRef.close(true); // Close the modal and return true to indicate success\n        },\n        (error) => {\n          this.notificationService.showNotification(\n            error.error.message || 'Failed to update product',\n            'error'\n          );\n        }\n      );\n  }\n\n  onCancel(): void {\n    this.dialogRef.close(false); // Close the modal without updating\n  }\n}","<h2 mat-dialog-title>Edit Product</h2>\n<mat-dialog-content>\n    <form (ngSubmit)=\"onUpdateProduct()\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>UUID</mat-label>\n            <input matInput [(ngModel)]=\"product.uuid\" name=\"uuid\" readonly />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Name</mat-label>\n            <input matInput [(ngModel)]=\"product.name\" name=\"name\" required />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Quantity</mat-label>\n            <input matInput type=\"number\" [(ngModel)]=\"product.quantity\" name=\"quantity\" required />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Unit Price</mat-label>\n            <input matInput type=\"number\" [(ngModel)]=\"product.unitPrice\" name=\"unitPrice\" required />\n        </mat-form-field>\n    </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button (click)=\"onCancel()\">Cancel</button>\n    <button mat-raised-button color=\"primary\" (click)=\"onUpdateProduct()\">Update</button>\n</mat-dialog-actions>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}