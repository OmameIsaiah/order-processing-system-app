{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../../services/notification.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nexport class OrderProductModalComponent {\n  constructor(http, notificationService, dialogRef, data) {\n    this.http = http;\n    this.notificationService = notificationService;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.quantity = 1;\n  }\n  onOrder() {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    const payload = {\n      productUuid: this.data.product.uuid,\n      quantity: this.quantity\n    };\n    this.http.post('http://localhost:2003/order-service/api/v1/order', payload, {\n      headers\n    }).subscribe(response => {\n      this.notificationService.showNotification('Order placed successfully', 'success');\n      this.dialogRef.close(true); // Close the modal and return true to indicate success\n    }, error => {\n      this.notificationService.showNotification(error.error.message || 'Failed to place order', 'error');\n    });\n  }\n  onCancel() {\n    this.dialogRef.close(false); // Close the modal without placing the order\n  }\n\n  static {\n    this.ɵfac = function OrderProductModalComponent_Factory(t) {\n      return new (t || OrderProductModalComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.NotificationService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: OrderProductModalComponent,\n      selectors: [[\"app-order-product-modal\"]],\n      decls: 20,\n      vars: 4,\n      consts: [[\"mat-dialog-title\", \"\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"quantity\", \"min\", \"1\", \"required\", \"\", 3, \"ngModel\", \"max\", \"ngModelChange\"], [\"align\", \"end\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n      template: function OrderProductModalComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1, \"Order Product\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\")(3, \"p\")(4, \"strong\");\n          i0.ɵɵtext(5, \"Product:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"p\")(8, \"strong\");\n          i0.ɵɵtext(9, \"Available Quantity:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"mat-form-field\", 1)(12, \"mat-label\");\n          i0.ɵɵtext(13, \"Quantity\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function OrderProductModalComponent_Template_input_ngModelChange_14_listener($event) {\n            return ctx.quantity = $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"mat-dialog-actions\", 3)(16, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function OrderProductModalComponent_Template_button_click_16_listener() {\n            return ctx.onCancel();\n          });\n          i0.ɵɵtext(17, \"Cancel\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function OrderProductModalComponent_Template_button_click_18_listener() {\n            return ctx.onOrder();\n          });\n          i0.ɵɵtext(19, \"Order\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵtextInterpolate1(\" \", ctx.data.product.name, \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", ctx.data.product.quantity, \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.quantity)(\"max\", ctx.data.product.quantity);\n        }\n      },\n      dependencies: [i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.RequiredValidator, i4.MinValidator, i4.MaxValidator, i4.NgModel, i5.MatButton, i3.MatDialogTitle, i3.MatDialogContent, i3.MatDialogActions, i6.MatInput, i7.MatFormField, i7.MatLabel],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAuBA,eAAe,QAAQ,0BAA0B;AACxE,SAAqBC,WAAW,QAAQ,sBAAsB;;;;;;;;;AAQ9D,OAAM,MAAOC,0BAA0B;EAGrCC,YACUC,IAAgB,EAChBC,mBAAwC,EACzCC,SAAmD,EAC1BC,IAAS;IAHjC,SAAI,GAAJH,IAAI;IACJ,wBAAmB,GAAnBC,mBAAmB;IACpB,cAAS,GAATC,SAAS;IACgB,SAAI,GAAJC,IAAI;IANtC,aAAQ,GAAW,CAAC;EAOjB;EAEHC,OAAO;IACL,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAAE,UAAUJ,KAAK,EAAE,CAAC;IAEzE,MAAMK,OAAO,GAAG;MACdC,WAAW,EAAE,IAAI,CAACR,IAAI,CAACS,OAAO,CAACC,IAAI;MACnCC,QAAQ,EAAE,IAAI,CAACA;KAChB;IAED,IAAI,CAACd,IAAI,CACNe,IAAI,CAAC,kDAAkD,EAAEL,OAAO,EAAE;MAAEF;IAAO,CAAE,CAAC,CAC9EQ,SAAS,CACPC,QAAa,IAAI;MAChB,IAAI,CAAChB,mBAAmB,CAACiB,gBAAgB,CAAC,2BAA2B,EAAE,SAAS,CAAC;MACjF,IAAI,CAAChB,SAAS,CAACiB,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC,EACAC,KAAK,IAAI;MACR,IAAI,CAACnB,mBAAmB,CAACiB,gBAAgB,CACvCE,KAAK,CAACA,KAAK,CAACC,OAAO,IAAI,uBAAuB,EAC9C,OAAO,CACR;IACH,CAAC,CACF;EACL;EAEAC,QAAQ;IACN,IAAI,CAACpB,SAAS,CAACiB,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/B;;;;uBArCWrB,0BAA0B,iJAO3BF,eAAe;IAAA;EAAA;;;YAPdE,0BAA0B;MAAAyB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCVvCC,6BAAqB;UAAAA,6BAAa;UAAAA,iBAAK;UACvCA,0CAAoB;UACPA,wBAAQ;UAAAA,iBAAS;UAACA,YAAuB;UAAAA,iBAAI;UACxDA,yBAAG;UAAQA,mCAAmB;UAAAA,iBAAS;UAACA,aAA2B;UAAAA,iBAAI;UAEvEA,0CAAkC;UACrBA,yBAAQ;UAAAA,iBAAY;UAC/BA,iCAAsH;UAAxFA;YAAA;UAAA,EAAsB;UAApDA,iBAAsH;UAG1HA,8CAAgC;UACXA;YAAA,OAASC,cAAU;UAAA,EAAC;UAACD,uBAAM;UAAAA,iBAAS;UACvDA,kCAA8D;UAApBA;YAAA,OAASC,aAAS;UAAA,EAAC;UAACD,sBAAK;UAAAA,iBAAS;;;UAV/CA,eAAuB;UAAvBA,qDAAuB;UACZA,eAA2B;UAA3BA,yDAA2B;UAInCA,eAAsB;UAAtBA,sCAAsB","names":["MAT_DIALOG_DATA","HttpHeaders","OrderProductModalComponent","constructor","http","notificationService","dialogRef","data","onOrder","token","localStorage","getItem","headers","set","payload","productUuid","product","uuid","quantity","post","subscribe","response","showNotification","close","error","message","onCancel","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Isaiah\\Business\\Neptune-Microfinance-Bank\\order-processing-system-app\\src\\app\\components\\products\\order-product-modal\\order-product-modal.component.ts","C:\\Isaiah\\Business\\Neptune-Microfinance-Bank\\order-processing-system-app\\src\\app\\components\\products\\order-product-modal\\order-product-modal.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { NotificationService } from '../../../services/notification.service';\n\n@Component({\n  selector: 'app-order-product-modal',\n  templateUrl: './order-product-modal.component.html',\n  styleUrls: ['./order-product-modal.component.css'],\n})\nexport class OrderProductModalComponent {\n  quantity: number = 1;\n\n  constructor(\n    private http: HttpClient,\n    private notificationService: NotificationService,\n    public dialogRef: MatDialogRef<OrderProductModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  onOrder(): void {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n    const payload = {\n      productUuid: this.data.product.uuid,\n      quantity: this.quantity,\n    };\n\n    this.http\n      .post('http://localhost:2003/order-service/api/v1/order', payload, { headers })\n      .subscribe(\n        (response: any) => {\n          this.notificationService.showNotification('Order placed successfully', 'success');\n          this.dialogRef.close(true); // Close the modal and return true to indicate success\n        },\n        (error) => {\n          this.notificationService.showNotification(\n            error.error.message || 'Failed to place order',\n            'error'\n          );\n        }\n      );\n  }\n\n  onCancel(): void {\n    this.dialogRef.close(false); // Close the modal without placing the order\n  }\n}","<h2 mat-dialog-title>Order Product</h2>\n<mat-dialog-content>\n  <p><strong>Product:</strong> {{ data.product.name }}</p>\n  <p><strong>Available Quantity:</strong> {{ data.product.quantity }}</p>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Quantity</mat-label>\n    <input matInput type=\"number\" [(ngModel)]=\"quantity\" name=\"quantity\" min=\"1\" [max]=\"data.product.quantity\" required />\n  </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button (click)=\"onCancel()\">Cancel</button>\n  <button mat-raised-button color=\"primary\" (click)=\"onOrder()\">Order</button>\n</mat-dialog-actions>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}